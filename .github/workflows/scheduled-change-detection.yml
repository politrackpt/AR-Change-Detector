name: üîç Scheduled Change Detection

on:
  schedule:
    # 8 AM Lisbon Time (UTC+1 in winter, UTC+2 in summer)
    - cron: '0 7 * * *'   # 8 AM Lisbon (winter time)
    - cron: '0 6 * * *'   # 8 AM Lisbon (summer time) 
    # 4 PM Lisbon Time
    - cron: '0 15 * * *'  # 4 PM Lisbon (winter time)
    - cron: '0 14 * * *'  # 4 PM Lisbon (summer time)
  
  # Allow manual triggering for testing
  workflow_dispatch:

env:
  NODE_VERSION: '22'
  TARGET_REPO: 'politrackpt/Open-Data-Retrieval'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    
    steps:
    - name: üîß Checkout Repository
      uses: actions/checkout@v4
      
    - name: üü¢ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: üì¶ Install Dependencies
      run: npm ci
      
    - name: üé≠ Install Playwright Browsers
      run: npx playwright install firefox
      
    - name: üîç Run Change Detection
      run: npm run default
      continue-on-error: true
      
    - name: üìã Check if Changes Detected
      id: check-changes
      run: |
        if [ -f "data/change-report.json" ]; then
          # Check if file is not empty and not just {}
          if [ -s "data/change-report.json" ] && ! grep -q '^{}$' "data/change-report.json"; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "üìä Changes detected - triggering Open-Data-Retrieval"
            cat data/change-report.json
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No changes detected - skipping trigger"
          fi
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "‚ùå No change-report.json file generated"
        fi
        
    - name: üöÄ Trigger Open-Data-Retrieval
      if: steps.check-changes.outputs.changes_detected == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Read the change report
          const changeReport = JSON.parse(fs.readFileSync('data/change-report.json', 'utf8'));
          
          // Trigger the other repository's workflow
          await github.rest.repos.createDispatchEvent({
            owner: 'politrackpt',
            repo: 'Open-Data-Retrieval',
            event_type: 'ar-changes-detected',
            client_payload: {
              changes: changeReport,
              source_repo: context.repo.full_name,
              source_run_id: context.runId
            }
          });
          
          console.log('‚úÖ Successfully triggered Open-Data-Retrieval workflow');