name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    name: 📏 Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Type checking
        run: npx tsc --noEmit

  test:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest
    needs: quality
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Lint code
        run: |
          npx eslint src/ --ext .ts

      - name: 🏗️ Build TypeScript
        run: npm run build || npx tsc

      - name: 🧪 Run tests
        run: npm test

      - name: 📊 Generate test coverage
        run: npm run test:coverage

      - name: 📈 Coverage threshold check
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.statements.pct')
          echo "Current coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | awk '{print ($1 == 1)}') )); then
            echo "❌ Coverage below 80% ($COVERAGE%)"
            exit 1
          else
            echo "✅ Coverage above 80% ($COVERAGE%)"
          fi